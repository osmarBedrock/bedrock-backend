generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                 Int       @id @default(autoincrement())
  firstName          String?
  lastName           String?
  avatar             String?
  email              String    @unique
  passwordHash       String?
  googleId           String?   @unique
  emailVerified      Boolean   @default(false)
  planType           PlanType  @default(ESSENTIALS)
  stripeCustomerId   String?
  currentPeriodEnd   DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  leads              Lead[]
  integrations       Integration[]
  dailyChatbotUsage  DailyChatbotUsage?
  planUsage          PlanUsage?
  isProfileComplete  Boolean  @default(false) 
  enterpriseName     String? 
  enterprisePicture  String? 
  websites           Website[]
}

enum PlanType {
  ESSENTIALS
  PRO
  ELITE
}


model Website {
  id                 Int       @id @default(autoincrement())
  domain             String
  propertyId         String?
  verificationCode   String?
  isVerified         Boolean   @default(false)
  userId             Int
  user               User     @relation(fields: [userId], references: [id])
  googleAccessToken  String?   @db.Text
  googleRefreshToken String?   @db.Text
  semrushApiKey      String?   @db.Text
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Lead {
  id                 Int       @id @default(autoincrement())
  userId             Int
  user               User      @relation(fields: [userId], references: [id])
  name               String?
  email              String?
  phone              String?
  status             String    @default("NEW")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Integration {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  service     String   // Ej: "google", "semrush", "facebook"
  accessToken String   @db.Text
  refreshToken String? @db.Text
  metadata    Json?
  expiresAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, service]) // Un usuario solo puede tener una integraci√≥n por servicio
}

model DailyChatbotUsage {
  userId             Int       @id
  user               User      @relation(fields: [userId], references: [id])
  interactionsToday  Int       @default(0)
  lastResetDate      DateTime  @default(now())
}

model PlanUsage {
  userId                  Int       @id
  leadCount               Int       @default(0)
  chatbotInteractionsToday Int      @default(0)
  lastResetDate           DateTime  @default(now())
  websiteCount            Int       @default(0)
  updatedAt               DateTime  @updatedAt
  user                    User      @relation(fields: [userId], references: [id])
}